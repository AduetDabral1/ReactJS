{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","react_router_dom","to","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","about","role","placeholder","onClick","toggleMode","aria-checked","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","value","backgroundColor","rows","onChange","event","console","log","target","disabled","length","newText","toUpperCase","showAlert","toLowerCase","navigator","clipboard","writeText","split","join","filter","element","Alert","height","alert","word","val","charAt","slice","capitalize","msg","About","myStyle","setMyStyle","_useState3","_useState4","btnText","setBtnText","aria-labelledby","border","width","defaultProps","App","setMode","setAlert","message","setTimeout","document","body","react_router","exact","path","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.1fe6f721.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg bg-${props.mode} navbar-${props.mode}`}>\r\n    <div className=\"container-fluid\">\r\n      <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\r\n      <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link active\" aria-current=\"page\" to=\"/about\">{props.about}</Link>\r\n          </li>\r\n          \r\n        </ul>\r\n        <form className=\"d-flex\" role=\"search\">\r\n          <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n          <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n        </form>\r\n        <div className={`form-check form-switch text-${props.mode===\"light\"?\"dark\":\"light\"}`}>\r\n  <input className=\"form-check-input mx-3\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" aria-checked id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n</div>\r\n      </div>\r\n    </div>\r\n  </nav>\r\n  )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title : PropTypes.string.isRequired,\r\n    about : PropTypes.string\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    about : \"About Us\"\r\n}\r\n","import React,{useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n\r\n    const [text,setText] = useState(\"\");\r\n    const handleUpClick = () => {\r\n        console.log(\"Uppercase was clicked \" + text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to uppercase\", \"success\");\r\n    }\r\n\r\n    const handleLowClick = () => {\r\n        console.log(\"Lowercase was clicked \" + text);\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to lowercase\", \"success\");\r\n    }\r\n\r\n    const handleClearClick = () => {\r\n        console.log(\"Clear was clicked \" + text);\r\n        setText('');\r\n        props.showAlert(\"Text Cleared\", \"success\");\r\n    }\r\n\r\n    const handleOnChange = (event) => {\r\n        console.log(\"on Change\");\r\n        setText(event.target.value);\r\n    }\r\nconst handleCopy = () => {\r\n    console.log (\"Copying text\");\r\n    navigator.clipboard.writeText(text);\r\n    props.showAlert(\"Copied to clipboard\", \"success\");\r\n}\r\n\r\nconst handleExtraSpaces =() => {\r\n    let newText = text.split(/[ ]+/);\r\n    setText(newText.join(\" \"));\r\n    props.showAlert(\"Extra spaces removed\", \"success\");\r\n}\r\n  return (\r\n    <>\r\n    <div className='container'>\r\n            <div className=\"mb-3\">\r\n            <h1 style={{ color : props.mode===\"light\"?\"black\":\"white\"}}>{props.heading}</h1>\r\n            <textarea className=\"form-control\" id=\"textbox\" value={text} style={{ backgroundColor : props.mode===\"light\"?\"white\":\"#D0CFFF\",  color : props.mode===\"light\"?\"black\":\"#4F0171\"}} rows=\"8\" onChange={handleOnChange}></textarea>\r\n            </div>\r\n            <button disabled= {text.length===0} className=\"btn btn-primary mx-2 my-2\" onClick={handleUpClick}>Convert to uppercase</button>\r\n            <button disabled= {text.length===0} className=\"btn btn-primary mx-2 my-2\" onClick={handleLowClick}>Convert to lowercase</button>\r\n            <button disabled= {text.length===0} className=\"btn btn-primary mx-2 my-2\" onClick={handleClearClick}>Clear Text</button>\r\n            <button disabled= {text.length===0} className=\"btn btn-primary mx-2 my-2\" onClick={handleCopy}>Copy Text</button>\r\n            <button disabled= {text.length===0} className=\"btn btn-primary mx-2 my-2\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n    </div>\r\n\r\n    <div className=\"container my-3\"  style={{ color : props.mode===\"light\"?\"black\":\"white\"}}>\r\n            <h2>Text Summary</h2>\r\n            <p>Number of words : {text.split(/\\s+/).filter((element)=>{return element.length!==0}).length}</p>\r\n            <p>Number of characters : {text.length}</p>\r\n            <p>{0.008 * text.split(\" \").filter((element)=>{return element.length!==0}).length} minutes read</p>\r\n\r\n            <h2>Preview</h2>\r\n            <p>{text.length>0?text:\"Enter text to preview it\"}</p>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize = (word) =>{\r\n        const val = word.toLowerCase();\r\n        return val.charAt(0).toUpperCase() + val.slice(1);\r\n    }\r\n  return (\r\n    <div style={{height:'50px'}}>\r\n{        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{capitalize(props.alert.type)}</strong> : {props.alert.msg}\r\n        </div>\r\n  }\r\n  </div>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\n\r\nexport default function About() {\r\n  const [myStyle, setMyStyle] = useState({\r\n    color: \"black\",\r\n    backgroundColor: \"white\"\r\n  })\r\n\r\n  const [btnText, setBtnText] = useState(\"Enable Dark Mode\");\r\n\r\n  const toggleStyle = () => {\r\n    if (myStyle.color === 'black') {\r\n      setMyStyle({\r\n        color: \"white\",\r\n        backgroundColor: \"black\",\r\n        border: \"1px solid cyan\",\r\n        width: \"100%\"\r\n      })\r\n      setBtnText(\"Enable Light Mode\");\r\n    }\r\n\r\n    else {\r\n      setMyStyle({\r\n        color: \"black\",\r\n        backgroundColor: \"white\"\r\n      })\r\n      setBtnText(\"Enable Dark Mode\");\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\" style={myStyle}>\r\n      <h2>About Us</h2>\r\n      <div className=\"accordion\" id=\"accordionPanelsStayOpenExample\">\r\n        <div className=\"accordion-item\">\r\n          <h2 className=\"accordion-header\" id=\"panelsStayOpen-headingOne\">\r\n            <button className=\"accordion-button\" type=\"button\" style={myStyle} data-bs-toggle=\"collapse\" data-bs-target=\"#panelsStayOpen-collapseOne\" aria-expanded=\"true\" aria-controls=\"panelsStayOpen-collapseOne\">\r\n            Text Utils\r\n            </button>\r\n          </h2>\r\n          <div id=\"panelsStayOpen-collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"panelsStayOpen-headingOne\">\r\n            <div className=\"accordion-body\" style={myStyle}>\r\n              <strong>Text Utils is a text utility application which allows you to perform CRUD operations on your text along with providing basic analysis of what's beig written.</strong> \r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    <div className=\"container my-3\">\r\n      <button onClick={toggleStyle} className='btn btn-primary my-3'>{btnText}</button>\r\n    </div>\r\n</div >\r\n  )\r\n}\r\n","import React, {useState} from 'react'\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport Alert from './components/Alert';\nimport About from './components/About';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message,type) =>{\n    setAlert({\n      msg : message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null)\n    }, 2000);\n  }\n  \n  const toggleMode = () =>{\n    if(mode==='light'){\n      setMode('dark');\n      document.body.style.backgroundColor ='#00115E';\n      showAlert(\"Dark Mode Enabled\",\"success\");\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor ='white';\n      showAlert(\"Light Mode Enabled\",\"success\");\n    }\n  }\n  return (\n    <Router>\n     <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode}/>\n     <Alert alert={alert}/>\n     <div className=\"container my-3\">\n     <Switch>\n          <Route exact path=\"/about\">\n            <About/>\n          </Route>\n          <Route exact path=\"/\">\n            <TextForm heading=\"Enter the text to analyze: \" mode={mode} showAlert={showAlert}/>\n          </Route>\n          \n      </Switch>\n    </div>\n    </Router>     \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}